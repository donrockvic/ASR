# -*- coding: utf-8 -*-
"""ASR_DATA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qz9mtWjHPY7_BVq89qIMx3OnylQC1LLr
"""

!wget -P /data http://download.tensorflow.org/data/speech_commands_v0.02.tar.gz

import os
import numpy as np
import pandas as pd
from tqdm import tqdm
import matplotlib.pyplot as plt
# For Audio 
import librosa, librosa.display

import tarfile
tar = tarfile.open('/data/speech_commands_v0.02.tar.gz', "r:gz")
tar.extractall('/data/test')
tar.close()

path = '/data/test/'
count = 0
for file in os.listdir(path):
  count+=1

print("Number of words: "+str(count))

path = '/data/test/nine'
count = 0
for file in os.listdir(path):
  count+=1

print("Number of trainind data per word: "+str(count))

os.listdir(path)[0:5]

dataLabels = ['tree','house','zero','bed','yes','four','up','stop','no','wow','nine','happy','follow', 'visual','cat','two', 'forward', 'down','right', 'marvin', 'seven', 'go', 'three',  'backward', 'on', 'dog', 'one', 'sheila', 'eight', 'bird', 'six', 'learn', 'off', 'left', 'five']
path = '/data/test/'

len(dataLabels)

# 
# Saving Data to numpy array
# 
# 
# convert file to wav2mfcc using the algorithm 
# Mel-frequency cepstral coefficients (MFCC)
def wav2mfcc(file_path, n_mfcc=20, max_len=44):
    wave, sr = librosa.load(file_path, mono=True)
    wave = np.asfortranarray(wave[::3])
    mfcc = librosa.feature.mfcc(wave, sr=16000, n_mfcc=n_mfcc)

    # If maximum length exceeds mfcc lengths then pad the remaining ones
    if (max_len > mfcc.shape[1]):
        pad_width = max_len - mfcc.shape[1]
        mfcc = np.pad(mfcc, pad_width=((0, 0), (0, pad_width)), mode='constant')

    # Else cutoff the remaining parts
    else:
        mfcc = mfcc[:, :max_len]
    
    return mfcc


def save_data_to_array(path,labels, max_len=44, n_mfcc=20):
    #labels, _, _ = get_labels(path)

    for label in labels:
        # Init mfcc vectors
        mfcc_vectors = []

        wavfiles = [path + label + '/' + wavfile for wavfile in os.listdir(path + '/' + label)]
        for wavfile in tqdm(wavfiles, "Saving vectors of label - '{}'".format(label)):
            mfcc = wav2mfcc(wavfile, max_len=max_len, n_mfcc=n_mfcc)
            mfcc_vectors.append(mfcc)
        np.save(label + '.npy', mfcc_vectors)

save_data_to_array(path,['tree'])

!cp left.npy '/content/drive/MyDrive/Colab Notebooks/data/'

